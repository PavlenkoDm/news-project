{"mappings":"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","sources":["src/read.js"],"sourcesContent":["import { refs, getNoFound, onGetLocaleStorageData } from './js/refs';\nimport './js/mobile_menu';\n\nlet favorites = [];\n\nrefs.accordionListRef.addEventListener('click', onFavoriteClick); // делегируем слушание на секцию аккордиона\n\nonOpenFavorites(refs.READ_KEY);\n\n//====== Функция-обработчик нажатия на кнопку Фавориты ==================\nfunction onFavoriteClick(event) {\n  if (!event.target.hasAttribute('data-info')) return; // проверка туда ли тырнули\n\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const dataFromLocaleStorage = onGetLocaleStorageData(refs.FAVORITES_KEY); // получаем массив объектов из Локального Хранилища\n\n  if (event.target.classList.contains('js-favorites')) {\n    // проверка условия содержит ли кнопка класс-метку что новость уже добавлена в избранное\n\n    event.target.textContent = 'Add to favorites'; // изменение текстового контента кнопки\n\n    event.target.classList.remove('js-favorites'); // убираем класс-метку что карточка добавлена в избранное\n\n    if (!dataFromLocaleStorage) {\n      // проверка на null из пустого Локального Хранилища\n\n      return;\n    }\n\n    const index = dataFromLocaleStorage.find((card, index) => {\n      // получаем индекс нужной карточки\n      if (card.link === parsedCardData.link) {\n        return index;\n      }\n    });\n\n    dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n    if (dataFromLocaleStorage.length === 0) {\n      // проверяем пустой массив или нет\n      localStorage.removeItem('FAVORITES');\n      return;\n    }\n\n    onSetLocaleStorageData(refs.FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n    return;\n  }\n  //В противном случае==========//\n  event.target.textContent = 'Add to favorites'; // изменение текстового контента кнопки\n\n  event.target.classList.add('js-favorites'); // добавляем класс-метку что карточка добавлена в избранное\n\n  if (dataFromLocaleStorage) {\n    // проверка на возврат null из пустого массива\n    const findPresenceResult = dataFromLocaleStorage.some(\n      card => card.link === parsedCardData.link\n    ); // получаем булевое значение есть ли новость в избранном\n\n    if (findPresenceResult) {\n      // делаем условие новости на присутствие в Локальном Хранилище в избранном\n\n      return;\n    }\n\n    favorites = [...dataFromLocaleStorage]; // распыляем в массив \"Фавориты\" данные из массива полученные из Локального хранилища\n  }\n\n  favorites.push(parsedCardData); // добавляем объект с данными карточки новости в массив \"Фавориты\"\n\n  onSetLocaleStorageData(refs.FAVORITES_KEY, favorites); // сетаем в локальное хранилище\n\n  favorites = []; // очищаем массив \"Фавориты\"\n}\n\n//=============== Функция при открытии страныцы \"Прочитанные\" ==================================\nfunction onOpenFavorites(key) {\n  const dataFromLocaleStorage = onGetLocaleStorageData(key); // получаем данные из избранных в Локальном Хранилище\n\n  if (!dataFromLocaleStorage || dataFromLocaleStorage.length === 0) {\n    // проверка на null или пустой массив\n    getNoFound(refs.accordionRef);\n    return;\n  }\n\n  onCreateReadMurkup(dataFromLocaleStorage);\n}\n\n//============== Функция рендера разметки ======================================\nfunction onCreateReadMurkup(array) {\n  array.forEach(date => {\n    // перебираем массив с объектами со свойством даты и массивом новостей\n\n    const firstMurkup = createFirstMurkup(date); // создаем разметку секции аккордеона с датой для новостей (разметка первого уровня)\n    refs.accordionListRef.insertAdjacentHTML('beforeend', firstMurkup); // рендерим эту разметку\n\n    const accordionPanel = document.querySelector('.accordion-list_panel'); // получаем ссылку на новосозданный элемент\n\n    accordionPanel.innerHTML = date.newsArray\n      .map(newsObject => {\n        // рендерим разметку непосредственно новостей (разметка второго внутреннего уровня)\n        const { title, category, date, link, description, imageURL } =\n          newsObject;\n        const favorite = JSON.stringify(newsObject);\n\n        //Логика проверки наличия новости в Фаворитах ------------------------------------------\n        const fromFavorites = onGetLocaleStorageData(refs.FAVORITES_KEY); // получаем массив из фаворитов из Локального Хранилища\n        let configReadMarkup = checkFavouritesByUrl(fromFavorites, link); //по результату проверки возвращается объект настроек который используется для добавления динамических свойств в разметку\n        if (!configReadMarkup) {\n          // на случай undefined\n          configReadMarkup = {\n            class: 'zaglushka',\n            addRemove: 'Add to favourites',\n          };\n        }\n        //--------------------------------------------------------------------------------------\n        return `<li class=\"markup-unit markup-unit__read\" name=\"card\">\n    <p class=\"markup-unit__section\">${category}</p>\n    \n    <div class=\"markup-unit__image-wrapper\">\n    <img \n        class=\"markup-unit__card-image\" \n        src=\"${imageURL}\" \n        alt=\"placeholder\"\n        />\n    <button \n        class=\"markup-unit__add-favorite js-fbutton ${configReadMarkup.class}\" \n        type=\"button\" \n        data-info\n        data-favorite='${favorite}'\n        data-id='${link}'\n      >\n      <p \n        class=\"markup-unit__favorite-text js-fbutton\"\n        data-favorite='${favorite}'\n        style=\"pointer-events: none;\"\n      >\n          ${configReadMarkup.addRemove}\n      </p>\n      <svg \n          data-favorite='${favorite}'  \n          class=\"markup-unit__favorite-icon markup-unit__favorite-icon--active js-fbutton\" \n          width=\"15\" \n          height=\"15\" \n          viewBox=\"0 0 37 32\"\n          style=\"pointer-events: none;\"\n        >\n        <path d=\"M10.666 2.286c-4.207 0-7.619 3.377-7.619 7.543 0 3.363 1.333 11.345 14.458 19.413 0.235 0.143 0.505 0.219 0.78 0.219s0.545-0.076 0.78-0.219c13.125-8.069 14.458-16.050 14.458-19.413 0-4.166-3.412-7.543-7.619-7.543s-7.619 4.571-7.619 4.571-3.412-4.571-7.619-4.571z\"></path>\n      </svg>\n    </button>\n    </div>\n    <a class=\"markup-unit__global-link\"\n      href=\"${link}\" \n      name=\"read_more\"\n      target=\"_blank\"\n      data-favorite='${favorite}'\n    >\n    <div class=\"markup-unit__details\">\n      <div class=\"markup-unit__subdetails\">\n       <h2 class=\"markup-unit__card-header\" name=\"card_header\">\n        ${title}\n    </h2>\n    <p class=\"markup-unit__card-text\" name=\"card_text\">\n        ${description}\n    </p>\n        <div class=\"markup-unit__card-footer\">\n          <p class=\"markup-unit__card-date\">${date}</p>\n          <p \n            class=\"markup-unit__read-more\" \n          >\n            Read more\n          </p>\n        </div>\n      </div>\n    </div>\n  </a>\n    </li>`;\n      })\n      .join(' ');\n  });\n}\n\nfunction createFirstMurkup(obj) {\n  return `<li class=\"accordion-list_item\">\n                <div class=\"accordion-title_wrapper\">\n                    <p class=\"accordion-list_title\">\n                        ${obj.whenRead}\n                    </p>\n                    <div class=\"accordion-arrow__wraper\">\n                        <svg width=\"14\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M1.7625 9L-3.18545e-07 7.28745L7.5 3.27835e-07L15 7.28745L13.2375 9L7.5 3.43725L1.7625 9Z\" fill=\"#111321\"/>\n                        </svg>\n                    </div>\n                </div>\n                <div class=\"accordion-list_panel\"></div>\n            </li>`;\n}\n\n//========== Функция парсинга данных из JSON файла =================================================\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функкция Добавления Данных в Locale Storage ========================================\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction checkFavouritesByUrl(array, newsLink) {\n  if (!array || array.length === 0) {\n    // проверка на null или пустой массив\n    return;\n  }\n  const compareResult = array.some(item => item.link === newsLink);\n  if (compareResult) {\n    return {\n      class: 'js-favorites',\n      addRemove: 'Remove from favorites',\n    };\n  } else {\n    return {\n      class: 'zaglushka',\n      addRemove: 'Add to favourites',\n    };\n  }\n}\n"],"names":["$8nrFW","parcelRequire","$5ba9ca3c64df0cad$var$favorites","$5ba9ca3c64df0cad$var$onSetLocaleStorageData","key","data","localStorage","setItem","JSON","stringify","error","console","log","$4Nugj","refs","accordionListRef","addEventListener","event","target","hasAttribute","parsedCardData","stringData","parse","$5ba9ca3c64df0cad$var$makeParseJson","dataset","favorite","dataFromLocaleStorage","onGetLocaleStorageData","FAVORITES_KEY","classList","contains","textContent","remove","index1","find","card","index","link","splice","length","removeItem","add","some","$parcel$interopDefault","push","getNoFound","accordionRef","array","forEach","date","firstMurkup","concat","whenRead","insertAdjacentHTML","document","querySelector","innerHTML","newsArray","map","newsObject","title","category","_$date","description","imageURL","configReadMarkup","newsLink","item","class","addRemove","$5ba9ca3c64df0cad$var$checkFavouritesByUrl","join","$5ba9ca3c64df0cad$var$onOpenFavorites","READ_KEY"],"version":3,"file":"read.27803953.js.map"}